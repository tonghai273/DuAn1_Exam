/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.poly.UI;

import com.poly.connect.Util;
import com.poly.dao.*;
import com.poly.model.*;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import java.util.*;
import java.util.concurrent.ThreadLocalRandom;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.extractor.XWPFWordExtractor;
import org.apache.poi.xwpf.usermodel.XWPFDocument;

/**
 *
 * @author Tong Duy Hai
 */
public class QuanLyDeThi1 extends javax.swing.JInternalFrame {

    int indexCH = 0, indexDT = 0;
    private String userName;

    private String monHoc;
    private String id;
    private DefaultTableModel modelDT = null;
    private DefaultTableModel modelCH = null;
    private String table = "CauHoi";
    private ArrayList<String> dsDaRanDom = new ArrayList<>();
    private List<DeThi> ls = new ArrayList<DeThi>();

    /**
     * Creates new form QuanLyDeThi
     */
    public QuanLyDeThi1() {
        initComponents();
        loadDataToTableDT();
        loadDataToTableCH(0);
        cbbMon.removeAllItems();
        loadCbbMon();
        cbbMon.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnRandom = new javax.swing.JButton();
        btnXuatFile = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        spnDe = new javax.swing.JSpinner();
        spnTB = new javax.swing.JSpinner();
        spnKho = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        cbbMon = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDSCauHoi = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtMaDT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDSDeThi = new javax.swing.JTable();

        setClosable(true);
        setTitle("ÔN THI ĐẠI HỌC KHỐI A");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));

        jPanel5.setBackground(new java.awt.Color(255, 204, 204));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/Add.png"))); // NOI18N
        btnThem.setText("Xóa trắng");
        btnThem.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/ic_add_test.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLuu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/ic_delete_test.png"))); // NOI18N
        btnXoa.setText("Xóa ");
        btnXoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnRandom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/ic_random.png"))); // NOI18N
        btnRandom.setText("Trộn câu hỏi");
        btnRandom.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRandom.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRandomActionPerformed(evt);
            }
        });

        btnXuatFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/poly/icon/ic_export.png"))); // NOI18N
        btnXuatFile.setText("Xuất file");
        btnXuatFile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnXuatFile.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnXuatFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97)
                .addComponent(btnRandom, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102)
                .addComponent(btnXuatFile, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnRandom, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnXuatFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1335, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 102, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(2, 2, 2)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Số câu khó");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Số câu dễ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Số câu trung bình");

        spnDe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spnTB.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spnKho.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Môn học");

        cbbMon.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbMon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Toán", "Vật lý", "Hóa học" }));

        tblDSCauHoi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã câu hỏi", "Môn học", "Mức độ", "Câu hỏi", "Đáp án A", "Đáp án B", "Đáp án C", "Đáp án D"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDSCauHoi);
        if (tblDSCauHoi.getColumnModel().getColumnCount() > 0) {
            tblDSCauHoi.getColumnModel().getColumn(0).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(1).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(2).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(3).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(4).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(5).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(6).setResizable(false);
            tblDSCauHoi.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Mã đề thi");

        txtMaDT.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tblDSDeThi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Môn học", "Mã đề thi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDSDeThi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDSDeThiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDSDeThi);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbMon, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtMaDT, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(131, 131, 131)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(spnDe, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(spnTB, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(spnKho, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1067, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMaDT, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spnDe, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spnTB, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(spnKho, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbMon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        private void loadCbbMon() {
        try {
            String sql = "select TenMon from MonHoc";
            Connection con = Util.getConnection();
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            ArrayList<String> ls = new ArrayList<>();

            while (rs.next()) {
                ls.add(rs.getString(1));
            }

            rs.close();
            for (String s : ls) {
                cbbMon.addItem(s);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadDataToTableCH(int roww) {
//            indexDT= tblDSDeThi.getSelectedRow();

        String maDe = tblDSDeThi.getValueAt(roww, 1).toString();
        System.out.println(maDe);
        DeThi deThi = DeThiDao.getDeThi(maDe);
        String[] dsmacauhoi = null;
        String[] dsDapAn = null;
        modelCH = (DefaultTableModel) tblDSCauHoi.getModel();
        modelCH.setNumRows(0);

        try {
            Connection con = Util.getConnection();
            PreparedStatement ps = con.prepareStatement("Select DSMaCH,DSDapAn from DeThi where MaDT='" + maDe + "'");
            ResultSet rs = ps.executeQuery();

            if (rs != null) {
                while (rs.next()) {
                    dsmacauhoi = rs.getString(1).trim().split(";");
                    dsDapAn = rs.getString(2).trim().split(";");
                }
            }
        } catch (Exception ex) {
            System.out.println("" + ex.toString());
        }

        for (int i = 0; i < dsmacauhoi.length; i++) {
            String sql = "";
            sql = "select * from CauHoi where MaCH='" + dsmacauhoi[i].trim() + "'";
            System.out.println("sql: " + sql);

            try {
                Connection con = Util.getConnection();
                PreparedStatement ps = con.prepareStatement(sql);
                ResultSet rs = ps.executeQuery();

                while (rs.next()) {
                    Vector vt = new Vector();
                    ArrayList<String> arr2 = new ArrayList<>();
                    vt.add(rs.getString("MaCH"));
                    vt.add(rs.getString("MaMon"));
                    vt.add(rs.getString("MucDo"));
                    vt.add(rs.getString("CauHoi"));
                    arr2.add(rs.getString(5));
                    arr2.add(rs.getString(6));
                    arr2.add(rs.getString(7));
                    arr2.add(rs.getString(8));
                    String da = dsDapAn[i];
                    System.out.println("Dap An: " + da + ".");
                    int so = 0;

                    for (int j = 0; j < 4; j++) {
                        int d;
                        try {
                            if (j == 3) {
                                d = Integer.valueOf(da.substring(j));
                            } else {
                                d = Integer.valueOf(da.substring(j, j + 1));

                            }
//                                    System.err.println("d: " + d);
                            vt.add(arr2.get(d - 1));
                        } catch (NumberFormatException e) {

                        }

                    }

                    modelCH.addRow(vt);
                }
                tblDSCauHoi.setModel(modelCH);
            } catch (Exception ex) {
                System.out.println("" + ex.toString());
            }
        }

    }

    private void loadDataToTableDT() {
        ArrayList<Object[]> arr = new ArrayList<>();
        arr = DeThiDao.getTenMon();
        modelDT = (DefaultTableModel) tblDSDeThi.getModel();
        modelDT.setRowCount(0);
        for (int i = 0; i < arr.size(); i++) {
            modelDT.addRow(arr.get(i));
        }
    }

    private void shuffleArray(int[] so) {
        Random rnd = ThreadLocalRandom.current();
        for (int i = so.length - 1; i > 0; i--) {
            int index = rnd.nextInt(i + 1);
            // Simple swap
            int a = so[index];
            so[index] = so[i];
            so[i] = a;
        }

    }

    private void troncau(String sql) {
        try {
            Connection con = Util.getConnection();
            PreparedStatement pss = con.prepareStatement(sql);
            ResultSet rs = pss.executeQuery();

            while (rs.next()) {
                Vector v = new Vector();
                int so[] = {1, 2, 3, 4};
                shuffleArray(so);
                for (int i = 0; i < so.length; i++) {
                    String s = String.format("%d", so[i]);
                    dsDaRanDom.add(s);
                }
                dsDaRanDom.add(";");
                ArrayList<String> arr = new ArrayList<>();

                arr.add(rs.getString(5));
                arr.add(rs.getString(6));
                arr.add(rs.getString(7));
                arr.add(rs.getString(8));

                v.add(rs.getString("MaCH"));
                v.add(rs.getString("MaMon"));
                v.add(rs.getString("MucDo"));
                v.add(rs.getString("CauHoi"));
                for (int i = 0; i < 4; i++) {
                    //       v.add(arr.get(rdArray[i]-1));
                    v.add(arr.get(so[i] - 1));
                }
                modelCH.addRow(v);
            }
        } catch (Exception e) {

        }
        tblDSCauHoi.setModel(modelCH);
    }

    private void getCauDeTable(int SoCauDe, String maMon, DefaultTableModel model) {
        maMon = maMon.trim();
        String sql = "select top " + SoCauDe + " * from " + table + " where MaMon='" + maMon + "' AND MucDo like N'%Dễ%'  order by NEWID()";
        System.err.println(sql);
        troncau(sql);

    }

    private void getCauTbTable(int SoCauTB, String maMon, DefaultTableModel model) throws SQLException {
        maMon = maMon.trim();
        String sql = "select top " + SoCauTB + " * from " + table + " where MaMon='" + maMon + "' AND MucDo like N'%Trung Bình%'  order by NEWID()";
        System.err.println(sql);
        troncau(sql);
    }

    private void getCauKhoTable(int SoCauKho, String maMon, DefaultTableModel model) throws SQLException {
        maMon = maMon.trim();
        String sql = "select top " + SoCauKho + " * from " + table + " where MaMon='" + maMon + "' AND MucDo like N'%Khó%'  order by NEWID()";
        System.err.println(sql);
        troncau(sql);
    }

    private void random() {
        dsDaRanDom = new ArrayList<>();
        modelCH = (DefaultTableModel) tblDSCauHoi.getModel();
        modelCH.setNumRows(0);
        String monHoc = (String) cbbMon.getSelectedItem();

        int soCauDe = (int) spnDe.getValue();
        int soCauKho = (int) spnKho.getValue();
        int soCauTB = (int) spnTB.getValue();
        int tongSoCau = 15;
        if (tongSoCau == 0 || (soCauDe < 0 && soCauKho < 0 && soCauTB < 0)) {
            JOptionPane.showMessageDialog(null, "bạn Cần Điền Đúng 1 số chức năng!", "Thông Báo", 1);
        } else if (tongSoCau != (soCauDe + soCauKho + soCauTB)) {
            JOptionPane.showMessageDialog(null, "Tổng số câu là 15 câu", "Thông Báo", 1);
        } else {
            String maMon = null;
            try {
                maMon = DeThiDao.getMaMon(monHoc);
                System.out.println("" + maMon);
                getCauDeTable(soCauDe, maMon, modelCH);
                getCauTbTable(soCauTB, maMon, modelCH);
                getCauKhoTable(soCauKho, maMon, modelCH);
            } catch (Exception ex) {
                System.out.println("err:" + ex.toString());
            }

        }
    }

    private void xoa() {
        indexDT = tblDSDeThi.getSelectedRow();
        if (indexDT == -1) {
            JOptionPane.showMessageDialog(null, "Bạn phải chọn đề cần xóa!", "Thông Báo", 1);
        }
        String maDe = tblDSDeThi.getValueAt(indexDT, 1).toString();
        int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa đề thi này ?", "Xoa", JOptionPane.YES_NO_OPTION);
        if (chon == JOptionPane.YES_OPTION) {
            try {
                DeThiDao dtd = new DeThiDao();
                dtd.delete(maDe);
                JOptionPane.showMessageDialog(null, "Đã xóa thành công!", "Thong Bao", 1);
                loadDataToTableDT();
                Util.changeLog(LoGin.userr, "Xóa đề thi", maDe);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Xóa thất bại!", "Thong Bao", 1);
            }
        }

    }

    private void luu() {

        String maDe = txtMaDT.getText();
        if (!maDe.matches("[A-Z]{2}[0-9]{4}")) {

            JOptionPane.showMessageDialog(null, "Mã đề thi gồm 2 chữ cái viết hoa và 4 chữ số !!", null, 0);
        } else if (checkTrung(maDe) == false) {
            JOptionPane.showMessageDialog(null, "Đề thi này đã tồn tại", null, 0);
        } else {
            String Monhoc = (String) cbbMon.getSelectedItem();
            String maMon = null;
            try {
                maMon = DeThiDao.getMaMon(Monhoc);

                String dsMaCauHoi = "";
                if (modelDT == null) {
                    JOptionPane.showMessageDialog(null, "Bạn phải trộn câu hỏi ! ", "Thong Bao", 1);
                }
                for (int i = 0; i < modelCH.getRowCount(); i++) {
                    dsMaCauHoi = dsMaCauHoi + (modelCH.getValueAt(i, 0).toString());
                    if (i != modelCH.getRowCount() - 1) {
                        dsMaCauHoi = dsMaCauHoi + ";";
                    }

                }
                String dsDaRandom = "";
                dsDaRanDom.remove(dsDaRanDom.size() - 1);
                for (Iterator<String> iterator = dsDaRanDom.iterator(); iterator.hasNext();) {
                    String da = iterator.next();
                    dsDaRandom = dsDaRandom + da;
                }
                System.err.println(dsDaRandom + " RANDOM");

                DeThi dt = new DeThi(maDe, maMon, dsMaCauHoi, 1200, dsDaRandom);
                System.out.println(maDe);
                System.out.println(maMon);
                System.out.println(dsMaCauHoi);
                System.out.println(dsDaRandom);
                DeThiDao dtd = new DeThiDao();
                dtd.save(dt);
                JOptionPane.showMessageDialog(null, "Lưu đề thêm công!", "Thong Bao", 1);
                dsDaRanDom.clear();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Lưu thất bại!", "Thong Bao", 1);
                System.out.println(ex);
            }
        }
    }

    private void clear() {
        txtMaDT.setText("");
        spnDe.setValue(0);
        spnTB.setValue(0);
        spnKho.setValue(0);
        modelCH = null;
        modelCH = (DefaultTableModel) tblDSCauHoi.getModel();
        modelCH.setRowCount(0);
        tblDSDeThi.clearSelection();
    }

    private void xuatFile() {
        indexDT = tblDSDeThi.getSelectedRow();

        if (indexDT == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn đề thi để xuất file !");
        } else {
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xuất đề thi này ra bản Word ?", "Xuất", JOptionPane.YES_NO_OPTION);
            if (chon == JOptionPane.YES_OPTION) {
                try {
                    String monHoc = tblDSDeThi.getValueAt(indexDT, 0).toString();
                    String maDe = tblDSDeThi.getValueAt(indexDT, 1).toString();
                    DeThi deThi = DeThiDao.getDeThi(maDe);
                    DeThiDao.write(deThi, monHoc);

                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private boolean checkTrung(String tenDe) {
        try {
            String sql = "select * from DeThi where MaDT = '" + tenDe + "'";
            Connection con = Util.getConnection();
            PreparedStatement pss = con.prepareStatement(sql);
            ResultSet rs = pss.executeQuery();
            while (rs.next()) {
                return false;
            }
        } catch (Exception e) {
        }
        return true;
    }
    private void btnRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRandomActionPerformed
        // TODO add your handling code here:
        random();
    }//GEN-LAST:event_btnRandomActionPerformed

    private void tblDSDeThiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDSDeThiMouseClicked
        // TODO add your handling code here:
        indexDT = tblDSDeThi.getSelectedRow();
        String mon = tblDSDeThi.getValueAt(indexDT, 0).toString();
        String de = tblDSDeThi.getValueAt(indexDT, 1).toString();
        txtMaDT.setText(de);
        cbbMon.setSelectedItem(mon);
        loadDataToTableCH(indexDT);
    }//GEN-LAST:event_tblDSDeThiMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        clear();

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        // TODO add your handling code here:
        luu();
        Util.changeLog(LoGin.userr, "Thêm đề thi", "");
        loadDataToTableDT();
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        xoa();
        loadDataToTableDT();
        clear();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnXuatFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatFileActionPerformed
        // TODO add your handling code here:
        xuatFile();
    }//GEN-LAST:event_btnXuatFileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnRandom;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatFile;
    private javax.swing.JComboBox<String> cbbMon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spnDe;
    private javax.swing.JSpinner spnKho;
    private javax.swing.JSpinner spnTB;
    private javax.swing.JTable tblDSCauHoi;
    private javax.swing.JTable tblDSDeThi;
    private javax.swing.JTextField txtMaDT;
    // End of variables declaration//GEN-END:variables
}
